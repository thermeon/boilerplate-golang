// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/thermeon/boilerplate-golang/infrastructures/server/models"
)

// SaleTransactionCreatedCode is the HTTP code returned for type SaleTransactionCreated
const SaleTransactionCreatedCode int = 201

/*SaleTransactionCreated successful operation

swagger:response saleTransactionCreated
*/
type SaleTransactionCreated struct {
	/*location of the created resource

	 */
	Location string `json:"location"`
}

// NewSaleTransactionCreated creates SaleTransactionCreated with default headers values
func NewSaleTransactionCreated() *SaleTransactionCreated {

	return &SaleTransactionCreated{}
}

// WithLocation adds the location to the sale transaction created response
func (o *SaleTransactionCreated) WithLocation(location string) *SaleTransactionCreated {
	o.Location = location
	return o
}

// SetLocation sets the location to the sale transaction created response
func (o *SaleTransactionCreated) SetLocation(location string) {
	o.Location = location
}

// WriteResponse to the client
func (o *SaleTransactionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header location

	location := o.Location
	if location != "" {
		rw.Header().Set("location", location)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// SaleTransactionBadRequestCode is the HTTP code returned for type SaleTransactionBadRequest
const SaleTransactionBadRequestCode int = 400

/*SaleTransactionBadRequest Bad Request

swagger:response saleTransactionBadRequest
*/
type SaleTransactionBadRequest struct {
}

// NewSaleTransactionBadRequest creates SaleTransactionBadRequest with default headers values
func NewSaleTransactionBadRequest() *SaleTransactionBadRequest {

	return &SaleTransactionBadRequest{}
}

// WriteResponse to the client
func (o *SaleTransactionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// SaleTransactionUnauthorizedCode is the HTTP code returned for type SaleTransactionUnauthorized
const SaleTransactionUnauthorizedCode int = 401

/*SaleTransactionUnauthorized Unauthorized

swagger:response saleTransactionUnauthorized
*/
type SaleTransactionUnauthorized struct {
}

// NewSaleTransactionUnauthorized creates SaleTransactionUnauthorized with default headers values
func NewSaleTransactionUnauthorized() *SaleTransactionUnauthorized {

	return &SaleTransactionUnauthorized{}
}

// WriteResponse to the client
func (o *SaleTransactionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// SaleTransactionNotFoundCode is the HTTP code returned for type SaleTransactionNotFound
const SaleTransactionNotFoundCode int = 404

/*SaleTransactionNotFound Not Found

swagger:response saleTransactionNotFound
*/
type SaleTransactionNotFound struct {
}

// NewSaleTransactionNotFound creates SaleTransactionNotFound with default headers values
func NewSaleTransactionNotFound() *SaleTransactionNotFound {

	return &SaleTransactionNotFound{}
}

// WriteResponse to the client
func (o *SaleTransactionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*SaleTransactionDefault generic error response

swagger:response saleTransactionDefault
*/
type SaleTransactionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSaleTransactionDefault creates SaleTransactionDefault with default headers values
func NewSaleTransactionDefault(code int) *SaleTransactionDefault {
	if code <= 0 {
		code = 500
	}

	return &SaleTransactionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the sale transaction default response
func (o *SaleTransactionDefault) WithStatusCode(code int) *SaleTransactionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the sale transaction default response
func (o *SaleTransactionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the sale transaction default response
func (o *SaleTransactionDefault) WithPayload(payload *models.Error) *SaleTransactionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the sale transaction default response
func (o *SaleTransactionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaleTransactionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
