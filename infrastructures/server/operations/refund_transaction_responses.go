// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/thermeon/boilerplate-golang/infrastructures/server/models"
)

// RefundTransactionCreatedCode is the HTTP code returned for type RefundTransactionCreated
const RefundTransactionCreatedCode int = 201

/*RefundTransactionCreated successful operation

swagger:response refundTransactionCreated
*/
type RefundTransactionCreated struct {
	/*location of the created resource

	 */
	Location string `json:"location"`
}

// NewRefundTransactionCreated creates RefundTransactionCreated with default headers values
func NewRefundTransactionCreated() *RefundTransactionCreated {

	return &RefundTransactionCreated{}
}

// WithLocation adds the location to the refund transaction created response
func (o *RefundTransactionCreated) WithLocation(location string) *RefundTransactionCreated {
	o.Location = location
	return o
}

// SetLocation sets the location to the refund transaction created response
func (o *RefundTransactionCreated) SetLocation(location string) {
	o.Location = location
}

// WriteResponse to the client
func (o *RefundTransactionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header location

	location := o.Location
	if location != "" {
		rw.Header().Set("location", location)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// RefundTransactionBadRequestCode is the HTTP code returned for type RefundTransactionBadRequest
const RefundTransactionBadRequestCode int = 400

/*RefundTransactionBadRequest Bad Request

swagger:response refundTransactionBadRequest
*/
type RefundTransactionBadRequest struct {
}

// NewRefundTransactionBadRequest creates RefundTransactionBadRequest with default headers values
func NewRefundTransactionBadRequest() *RefundTransactionBadRequest {

	return &RefundTransactionBadRequest{}
}

// WriteResponse to the client
func (o *RefundTransactionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// RefundTransactionUnauthorizedCode is the HTTP code returned for type RefundTransactionUnauthorized
const RefundTransactionUnauthorizedCode int = 401

/*RefundTransactionUnauthorized Unauthorized

swagger:response refundTransactionUnauthorized
*/
type RefundTransactionUnauthorized struct {
}

// NewRefundTransactionUnauthorized creates RefundTransactionUnauthorized with default headers values
func NewRefundTransactionUnauthorized() *RefundTransactionUnauthorized {

	return &RefundTransactionUnauthorized{}
}

// WriteResponse to the client
func (o *RefundTransactionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// RefundTransactionNotFoundCode is the HTTP code returned for type RefundTransactionNotFound
const RefundTransactionNotFoundCode int = 404

/*RefundTransactionNotFound Not Found

swagger:response refundTransactionNotFound
*/
type RefundTransactionNotFound struct {
}

// NewRefundTransactionNotFound creates RefundTransactionNotFound with default headers values
func NewRefundTransactionNotFound() *RefundTransactionNotFound {

	return &RefundTransactionNotFound{}
}

// WriteResponse to the client
func (o *RefundTransactionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*RefundTransactionDefault generic error response

swagger:response refundTransactionDefault
*/
type RefundTransactionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRefundTransactionDefault creates RefundTransactionDefault with default headers values
func NewRefundTransactionDefault(code int) *RefundTransactionDefault {
	if code <= 0 {
		code = 500
	}

	return &RefundTransactionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the refund transaction default response
func (o *RefundTransactionDefault) WithStatusCode(code int) *RefundTransactionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the refund transaction default response
func (o *RefundTransactionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the refund transaction default response
func (o *RefundTransactionDefault) WithPayload(payload *models.Error) *RefundTransactionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the refund transaction default response
func (o *RefundTransactionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RefundTransactionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
