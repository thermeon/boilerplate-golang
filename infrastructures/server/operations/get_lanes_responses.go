// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/thermeon/boilerplate-golang/infrastructures/server/models"
)

// GetLanesOKCode is the HTTP code returned for type GetLanesOK
const GetLanesOKCode int = 200

/*GetLanesOK Lanes retrieved

swagger:response getLanesOK
*/
type GetLanesOK struct {

	/*
	  In: Body
	*/
	Payload models.Lanes `json:"body,omitempty"`
}

// NewGetLanesOK creates GetLanesOK with default headers values
func NewGetLanesOK() *GetLanesOK {

	return &GetLanesOK{}
}

// WithPayload adds the payload to the get lanes o k response
func (o *GetLanesOK) WithPayload(payload models.Lanes) *GetLanesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get lanes o k response
func (o *GetLanesOK) SetPayload(payload models.Lanes) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLanesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Lanes{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetLanesBadRequestCode is the HTTP code returned for type GetLanesBadRequest
const GetLanesBadRequestCode int = 400

/*GetLanesBadRequest Bad Request

swagger:response getLanesBadRequest
*/
type GetLanesBadRequest struct {
}

// NewGetLanesBadRequest creates GetLanesBadRequest with default headers values
func NewGetLanesBadRequest() *GetLanesBadRequest {

	return &GetLanesBadRequest{}
}

// WriteResponse to the client
func (o *GetLanesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetLanesUnauthorizedCode is the HTTP code returned for type GetLanesUnauthorized
const GetLanesUnauthorizedCode int = 401

/*GetLanesUnauthorized Unauthorized

swagger:response getLanesUnauthorized
*/
type GetLanesUnauthorized struct {
}

// NewGetLanesUnauthorized creates GetLanesUnauthorized with default headers values
func NewGetLanesUnauthorized() *GetLanesUnauthorized {

	return &GetLanesUnauthorized{}
}

// WriteResponse to the client
func (o *GetLanesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// GetLanesNotFoundCode is the HTTP code returned for type GetLanesNotFound
const GetLanesNotFoundCode int = 404

/*GetLanesNotFound Not Found

swagger:response getLanesNotFound
*/
type GetLanesNotFound struct {
}

// NewGetLanesNotFound creates GetLanesNotFound with default headers values
func NewGetLanesNotFound() *GetLanesNotFound {

	return &GetLanesNotFound{}
}

// WriteResponse to the client
func (o *GetLanesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*GetLanesDefault generic error response

swagger:response getLanesDefault
*/
type GetLanesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetLanesDefault creates GetLanesDefault with default headers values
func NewGetLanesDefault(code int) *GetLanesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetLanesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get lanes default response
func (o *GetLanesDefault) WithStatusCode(code int) *GetLanesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get lanes default response
func (o *GetLanesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get lanes default response
func (o *GetLanesDefault) WithPayload(payload *models.Error) *GetLanesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get lanes default response
func (o *GetLanesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLanesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
