// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/thermeon/boilerplate-golang/infrastructures/server/models"
)

// CaptureTransactionCreatedCode is the HTTP code returned for type CaptureTransactionCreated
const CaptureTransactionCreatedCode int = 201

/*CaptureTransactionCreated successful operation

swagger:response captureTransactionCreated
*/
type CaptureTransactionCreated struct {
	/*location of the created resource

	 */
	Location string `json:"location"`
}

// NewCaptureTransactionCreated creates CaptureTransactionCreated with default headers values
func NewCaptureTransactionCreated() *CaptureTransactionCreated {

	return &CaptureTransactionCreated{}
}

// WithLocation adds the location to the capture transaction created response
func (o *CaptureTransactionCreated) WithLocation(location string) *CaptureTransactionCreated {
	o.Location = location
	return o
}

// SetLocation sets the location to the capture transaction created response
func (o *CaptureTransactionCreated) SetLocation(location string) {
	o.Location = location
}

// WriteResponse to the client
func (o *CaptureTransactionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header location

	location := o.Location
	if location != "" {
		rw.Header().Set("location", location)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// CaptureTransactionBadRequestCode is the HTTP code returned for type CaptureTransactionBadRequest
const CaptureTransactionBadRequestCode int = 400

/*CaptureTransactionBadRequest Bad Request

swagger:response captureTransactionBadRequest
*/
type CaptureTransactionBadRequest struct {
}

// NewCaptureTransactionBadRequest creates CaptureTransactionBadRequest with default headers values
func NewCaptureTransactionBadRequest() *CaptureTransactionBadRequest {

	return &CaptureTransactionBadRequest{}
}

// WriteResponse to the client
func (o *CaptureTransactionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// CaptureTransactionUnauthorizedCode is the HTTP code returned for type CaptureTransactionUnauthorized
const CaptureTransactionUnauthorizedCode int = 401

/*CaptureTransactionUnauthorized Unauthorized

swagger:response captureTransactionUnauthorized
*/
type CaptureTransactionUnauthorized struct {
}

// NewCaptureTransactionUnauthorized creates CaptureTransactionUnauthorized with default headers values
func NewCaptureTransactionUnauthorized() *CaptureTransactionUnauthorized {

	return &CaptureTransactionUnauthorized{}
}

// WriteResponse to the client
func (o *CaptureTransactionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// CaptureTransactionNotFoundCode is the HTTP code returned for type CaptureTransactionNotFound
const CaptureTransactionNotFoundCode int = 404

/*CaptureTransactionNotFound Not Found

swagger:response captureTransactionNotFound
*/
type CaptureTransactionNotFound struct {
}

// NewCaptureTransactionNotFound creates CaptureTransactionNotFound with default headers values
func NewCaptureTransactionNotFound() *CaptureTransactionNotFound {

	return &CaptureTransactionNotFound{}
}

// WriteResponse to the client
func (o *CaptureTransactionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*CaptureTransactionDefault generic error response

swagger:response captureTransactionDefault
*/
type CaptureTransactionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCaptureTransactionDefault creates CaptureTransactionDefault with default headers values
func NewCaptureTransactionDefault(code int) *CaptureTransactionDefault {
	if code <= 0 {
		code = 500
	}

	return &CaptureTransactionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the capture transaction default response
func (o *CaptureTransactionDefault) WithStatusCode(code int) *CaptureTransactionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the capture transaction default response
func (o *CaptureTransactionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the capture transaction default response
func (o *CaptureTransactionDefault) WithPayload(payload *models.Error) *CaptureTransactionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the capture transaction default response
func (o *CaptureTransactionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CaptureTransactionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
