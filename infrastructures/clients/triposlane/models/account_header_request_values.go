// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AccountHeaderRequestValues account header request values
//
// swagger:model AccountHeaderRequestValues
type AccountHeaderRequestValues struct {

	// acceptor Id
	AcceptorID string `json:"acceptorId,omitempty"`

	// account Id
	AccountID int32 `json:"accountId,omitempty"`

	// account token
	AccountToken string `json:"accountToken,omitempty"`

	// command Id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	CommandID strfmt.UUID `json:"commandId,omitempty"`

	// request Id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	RequestID strfmt.UUID `json:"requestId,omitempty"`
}

// Validate validates this account header request values
func (m *AccountHeaderRequestValues) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommandID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequestID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountHeaderRequestValues) validateCommandID(formats strfmt.Registry) error {
	if swag.IsZero(m.CommandID) { // not required
		return nil
	}

	if err := validate.FormatOf("commandId", "body", "uuid", m.CommandID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AccountHeaderRequestValues) validateRequestID(formats strfmt.Registry) error {
	if swag.IsZero(m.RequestID) { // not required
		return nil
	}

	if err := validate.FormatOf("requestId", "body", "uuid", m.RequestID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this account header request values based on context it is used
func (m *AccountHeaderRequestValues) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AccountHeaderRequestValues) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountHeaderRequestValues) UnmarshalBinary(b []byte) error {
	var res AccountHeaderRequestValues
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
