// Code generated by go-swagger; DO NOT EDIT.

package connection_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/thermeon/boilerplate-golang/infrastructures/clients/triposlane/models"
)

// ConnectionStatusHistoryReader is a Reader for the ConnectionStatusHistory structure.
type ConnectionStatusHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConnectionStatusHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConnectionStatusHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewConnectionStatusHistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewConnectionStatusHistoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewConnectionStatusHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewConnectionStatusHistoryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewConnectionStatusHistoryOK creates a ConnectionStatusHistoryOK with default headers values
func NewConnectionStatusHistoryOK() *ConnectionStatusHistoryOK {
	return &ConnectionStatusHistoryOK{}
}

/* ConnectionStatusHistoryOK describes a response with status code 200, with default header values.

Valid request.
*/
type ConnectionStatusHistoryOK struct {
	Payload []*models.ConnectionStatusDto
}

func (o *ConnectionStatusHistoryOK) Error() string {
	return fmt.Sprintf("[GET /v1/lanes/{laneId}/connectionstatus/history][%d] connectionStatusHistoryOK  %+v", 200, o.Payload)
}
func (o *ConnectionStatusHistoryOK) GetPayload() []*models.ConnectionStatusDto {
	return o.Payload
}

func (o *ConnectionStatusHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectionStatusHistoryBadRequest creates a ConnectionStatusHistoryBadRequest with default headers values
func NewConnectionStatusHistoryBadRequest() *ConnectionStatusHistoryBadRequest {
	return &ConnectionStatusHistoryBadRequest{}
}

/* ConnectionStatusHistoryBadRequest describes a response with status code 400, with default header values.

Invalid fields on request.
*/
type ConnectionStatusHistoryBadRequest struct {
	Payload *models.ExceptionDto
}

func (o *ConnectionStatusHistoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/lanes/{laneId}/connectionstatus/history][%d] connectionStatusHistoryBadRequest  %+v", 400, o.Payload)
}
func (o *ConnectionStatusHistoryBadRequest) GetPayload() *models.ExceptionDto {
	return o.Payload
}

func (o *ConnectionStatusHistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExceptionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectionStatusHistoryUnauthorized creates a ConnectionStatusHistoryUnauthorized with default headers values
func NewConnectionStatusHistoryUnauthorized() *ConnectionStatusHistoryUnauthorized {
	return &ConnectionStatusHistoryUnauthorized{}
}

/* ConnectionStatusHistoryUnauthorized describes a response with status code 401, with default header values.

Returned if the AcceptorId, AccountId, and AccountToken provided in the HTTP request header are invalid.
*/
type ConnectionStatusHistoryUnauthorized struct {
	Payload *models.ExceptionDto
}

func (o *ConnectionStatusHistoryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/lanes/{laneId}/connectionstatus/history][%d] connectionStatusHistoryUnauthorized  %+v", 401, o.Payload)
}
func (o *ConnectionStatusHistoryUnauthorized) GetPayload() *models.ExceptionDto {
	return o.Payload
}

func (o *ConnectionStatusHistoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExceptionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectionStatusHistoryNotFound creates a ConnectionStatusHistoryNotFound with default headers values
func NewConnectionStatusHistoryNotFound() *ConnectionStatusHistoryNotFound {
	return &ConnectionStatusHistoryNotFound{}
}

/* ConnectionStatusHistoryNotFound describes a response with status code 404, with default header values.

Lane not found.
*/
type ConnectionStatusHistoryNotFound struct {
	Payload *models.ExceptionDto
}

func (o *ConnectionStatusHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/lanes/{laneId}/connectionstatus/history][%d] connectionStatusHistoryNotFound  %+v", 404, o.Payload)
}
func (o *ConnectionStatusHistoryNotFound) GetPayload() *models.ExceptionDto {
	return o.Payload
}

func (o *ConnectionStatusHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExceptionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConnectionStatusHistoryServiceUnavailable creates a ConnectionStatusHistoryServiceUnavailable with default headers values
func NewConnectionStatusHistoryServiceUnavailable() *ConnectionStatusHistoryServiceUnavailable {
	return &ConnectionStatusHistoryServiceUnavailable{}
}

/* ConnectionStatusHistoryServiceUnavailable describes a response with status code 503, with default header values.

Returned if a resource is not availabe.
*/
type ConnectionStatusHistoryServiceUnavailable struct {
	Payload *models.ExceptionDto
}

func (o *ConnectionStatusHistoryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v1/lanes/{laneId}/connectionstatus/history][%d] connectionStatusHistoryServiceUnavailable  %+v", 503, o.Payload)
}
func (o *ConnectionStatusHistoryServiceUnavailable) GetPayload() *models.ExceptionDto {
	return o.Payload
}

func (o *ConnectionStatusHistoryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExceptionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
