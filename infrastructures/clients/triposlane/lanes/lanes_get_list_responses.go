// Code generated by go-swagger; DO NOT EDIT.

package lanes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/thermeon/boilerplate-golang/infrastructures/clients/triposlane/models"
)

// LanesGetListReader is a Reader for the LanesGetList structure.
type LanesGetListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LanesGetListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLanesGetListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLanesGetListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLanesGetListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLanesGetListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLanesGetListOK creates a LanesGetListOK with default headers values
func NewLanesGetListOK() *LanesGetListOK {
	return &LanesGetListOK{}
}

/* LanesGetListOK describes a response with status code 200, with default header values.

Valid request.
*/
type LanesGetListOK struct {
	Payload []*models.LaneDto
}

func (o *LanesGetListOK) Error() string {
	return fmt.Sprintf("[GET /v1/lanes][%d] lanesGetListOK  %+v", 200, o.Payload)
}
func (o *LanesGetListOK) GetPayload() []*models.LaneDto {
	return o.Payload
}

func (o *LanesGetListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLanesGetListBadRequest creates a LanesGetListBadRequest with default headers values
func NewLanesGetListBadRequest() *LanesGetListBadRequest {
	return &LanesGetListBadRequest{}
}

/* LanesGetListBadRequest describes a response with status code 400, with default header values.

Invalid fields on request.
*/
type LanesGetListBadRequest struct {
	Payload *models.ExceptionDto
}

func (o *LanesGetListBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/lanes][%d] lanesGetListBadRequest  %+v", 400, o.Payload)
}
func (o *LanesGetListBadRequest) GetPayload() *models.ExceptionDto {
	return o.Payload
}

func (o *LanesGetListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExceptionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLanesGetListUnauthorized creates a LanesGetListUnauthorized with default headers values
func NewLanesGetListUnauthorized() *LanesGetListUnauthorized {
	return &LanesGetListUnauthorized{}
}

/* LanesGetListUnauthorized describes a response with status code 401, with default header values.

Returned if the AcceptorId, AccountId, and AccountToken provided in the HTTP request header are invalid.
*/
type LanesGetListUnauthorized struct {
	Payload *models.ExceptionDto
}

func (o *LanesGetListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/lanes][%d] lanesGetListUnauthorized  %+v", 401, o.Payload)
}
func (o *LanesGetListUnauthorized) GetPayload() *models.ExceptionDto {
	return o.Payload
}

func (o *LanesGetListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExceptionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLanesGetListInternalServerError creates a LanesGetListInternalServerError with default headers values
func NewLanesGetListInternalServerError() *LanesGetListInternalServerError {
	return &LanesGetListInternalServerError{}
}

/* LanesGetListInternalServerError describes a response with status code 500, with default header values.

Returned if an error occurred processing the request.
*/
type LanesGetListInternalServerError struct {
	Payload *models.ExceptionDto
}

func (o *LanesGetListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/lanes][%d] lanesGetListInternalServerError  %+v", 500, o.Payload)
}
func (o *LanesGetListInternalServerError) GetPayload() *models.ExceptionDto {
	return o.Payload
}

func (o *LanesGetListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExceptionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
