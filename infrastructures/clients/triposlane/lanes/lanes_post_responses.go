// Code generated by go-swagger; DO NOT EDIT.

package lanes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/thermeon/boilerplate-golang/infrastructures/clients/triposlane/models"
)

// LanesPostReader is a Reader for the LanesPost structure.
type LanesPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LanesPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLanesPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLanesPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLanesPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLanesPostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLanesPostOK creates a LanesPostOK with default headers values
func NewLanesPostOK() *LanesPostOK {
	return &LanesPostOK{}
}

/* LanesPostOK describes a response with status code 200, with default header values.

Valid request.
*/
type LanesPostOK struct {
	Payload *models.LaneDto
}

func (o *LanesPostOK) Error() string {
	return fmt.Sprintf("[POST /v1/lanes][%d] lanesPostOK  %+v", 200, o.Payload)
}
func (o *LanesPostOK) GetPayload() *models.LaneDto {
	return o.Payload
}

func (o *LanesPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LaneDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLanesPostBadRequest creates a LanesPostBadRequest with default headers values
func NewLanesPostBadRequest() *LanesPostBadRequest {
	return &LanesPostBadRequest{}
}

/* LanesPostBadRequest describes a response with status code 400, with default header values.

Invalid fields on request.
*/
type LanesPostBadRequest struct {
	Payload *models.ExceptionDto
}

func (o *LanesPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/lanes][%d] lanesPostBadRequest  %+v", 400, o.Payload)
}
func (o *LanesPostBadRequest) GetPayload() *models.ExceptionDto {
	return o.Payload
}

func (o *LanesPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExceptionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLanesPostUnauthorized creates a LanesPostUnauthorized with default headers values
func NewLanesPostUnauthorized() *LanesPostUnauthorized {
	return &LanesPostUnauthorized{}
}

/* LanesPostUnauthorized describes a response with status code 401, with default header values.

Returned if the AcceptorId, AccountId, and AccountToken provided in the HTTP request header are invalid.
*/
type LanesPostUnauthorized struct {
	Payload *models.ExceptionDto
}

func (o *LanesPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v1/lanes][%d] lanesPostUnauthorized  %+v", 401, o.Payload)
}
func (o *LanesPostUnauthorized) GetPayload() *models.ExceptionDto {
	return o.Payload
}

func (o *LanesPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExceptionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLanesPostInternalServerError creates a LanesPostInternalServerError with default headers values
func NewLanesPostInternalServerError() *LanesPostInternalServerError {
	return &LanesPostInternalServerError{}
}

/* LanesPostInternalServerError describes a response with status code 500, with default header values.

Returned if an error occurred processing the request.
*/
type LanesPostInternalServerError struct {
	Payload *models.ExceptionDto
}

func (o *LanesPostInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/lanes][%d] lanesPostInternalServerError  %+v", 500, o.Payload)
}
func (o *LanesPostInternalServerError) GetPayload() *models.ExceptionDto {
	return o.Payload
}

func (o *LanesPostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExceptionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
