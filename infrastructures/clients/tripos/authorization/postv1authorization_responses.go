// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/models"
)

// Postv1authorizationReader is a Reader for the Postv1authorization structure.
type Postv1authorizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *Postv1authorizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostv1authorizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostv1authorizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostv1authorizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostv1authorizationOK creates a Postv1authorizationOK with default headers values
func NewPostv1authorizationOK() *Postv1authorizationOK {
	return &Postv1authorizationOK{}
}

/* Postv1authorizationOK describes a response with status code 200, with default header values.

Success
*/
type Postv1authorizationOK struct {
	Payload *models.AuthorizationResponse
}

func (o *Postv1authorizationOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/authorization][%d] postv1authorizationOK  %+v", 200, o.Payload)
}
func (o *Postv1authorizationOK) GetPayload() *models.AuthorizationResponse {
	return o.Payload
}

func (o *Postv1authorizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostv1authorizationBadRequest creates a Postv1authorizationBadRequest with default headers values
func NewPostv1authorizationBadRequest() *Postv1authorizationBadRequest {
	return &Postv1authorizationBadRequest{}
}

/* Postv1authorizationBadRequest describes a response with status code 400, with default header values.

1) Returned if client sends in all 5 of the healthcare values as positive values. 2) Returned if any healthcare field has a negative value. 3) Returned if healthcare Total field is less than sum of the other healthcare fields. 4) Returned if MarketCode is not HotelLodging but the request includes lodging parameters on a valid lodging request. 5) Returned if the lodging duration is less than 0 on a valid lodging request.
*/
type Postv1authorizationBadRequest struct {
}

func (o *Postv1authorizationBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/authorization][%d] postv1authorizationBadRequest ", 400)
}

func (o *Postv1authorizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostv1authorizationUnauthorized creates a Postv1authorizationUnauthorized with default headers values
func NewPostv1authorizationUnauthorized() *Postv1authorizationUnauthorized {
	return &Postv1authorizationUnauthorized{}
}

/* Postv1authorizationUnauthorized describes a response with status code 401, with default header values.

Returned if the AcceptorId, AccountId, AccountToken and TerminalId (config file only) are not provided in the HTTP request header or in the config file.
*/
type Postv1authorizationUnauthorized struct {
}

func (o *Postv1authorizationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1/authorization][%d] postv1authorizationUnauthorized ", 401)
}

func (o *Postv1authorizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
