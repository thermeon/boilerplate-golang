// Code generated by go-swagger; DO NOT EDIT.

package refund

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new refund API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for refund API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	Postv1refund(params *Postv1refundParams, opts ...ClientOption) (*Postv1refundOK, error)

	Postv1refundpaymentAccountID(params *Postv1refundpaymentAccountIDParams, opts ...ClientOption) (*Postv1refundpaymentAccountIDOK, error)

	Postv1refundtoken(params *Postv1refundtokenParams, opts ...ClientOption) (*Postv1refundtokenOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  Postv1refund creates a new card refund based on the passed in parameters

  Creates a new card refund based on the passed in parameters. <a href='https://triposcert.vantiv.com/api/help/kb/refund.html'>More&raquo;</a>  Additionally, this endpoint supports QuickChip/PreRead functionality. See <a href='https://triposcert.vantiv.com/api/help/kb/cloud/QuickChipConfiguration.html'> QuickChip/PreRead documentation</a> for more information.
*/
func (a *Client) Postv1refund(params *Postv1refundParams, opts ...ClientOption) (*Postv1refundOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostv1refundParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postv1refund",
		Method:             "POST",
		PathPattern:        "/api/v1/refund",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Postv1refundReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Postv1refundOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postv1refund: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Postv1refundpaymentAccountID creates a new payment account refund based on the passed in parameters
*/
func (a *Client) Postv1refundpaymentAccountID(params *Postv1refundpaymentAccountIDParams, opts ...ClientOption) (*Postv1refundpaymentAccountIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostv1refundpaymentAccountIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postv1refundpaymentAccountId",
		Method:             "POST",
		PathPattern:        "/api/v1/refund/{paymentAccountId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Postv1refundpaymentAccountIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Postv1refundpaymentAccountIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postv1refundpaymentAccountId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Postv1refundtoken creates a new card refund using a token based on the passed in amounts

  See <a href='https://triposcert.vantiv.com/api/help/kb/omniToken.html'>OmniToken documentation</a> for more information.
*/
func (a *Client) Postv1refundtoken(params *Postv1refundtokenParams, opts ...ClientOption) (*Postv1refundtokenOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostv1refundtokenParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postv1refundtoken",
		Method:             "POST",
		PathPattern:        "/api/v1/refund/token",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Postv1refundtokenReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Postv1refundtokenOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postv1refundtoken: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
