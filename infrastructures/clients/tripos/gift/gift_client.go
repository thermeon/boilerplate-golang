// Code generated by go-swagger; DO NOT EDIT.

package gift

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new gift API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for gift API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	Getv1gift(params *Getv1giftParams, opts ...ClientOption) (*Getv1giftOK, error)

	Postv1giftactivate(params *Postv1giftactivateParams, opts ...ClientOption) (*Postv1giftactivateOK, error)

	Postv1giftbalanceTransfer(params *Postv1giftbalanceTransferParams, opts ...ClientOption) (*Postv1giftbalanceTransferOK, error)

	Postv1giftclose(params *Postv1giftcloseParams, opts ...ClientOption) (*Postv1giftcloseOK, error)

	Postv1giftreload(params *Postv1giftreloadParams, opts ...ClientOption) (*Postv1giftreloadOK, error)

	Postv1giftunload(params *Postv1giftunloadParams, opts ...ClientOption) (*Postv1giftunloadOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  Getv1gift returns the endpoints used to manage vantiv and valutec gift cards
*/
func (a *Client) Getv1gift(params *Getv1giftParams, opts ...ClientOption) (*Getv1giftOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetv1giftParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getv1gift",
		Method:             "GET",
		PathPattern:        "/api/v1/gift",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Getv1giftReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Getv1giftOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getv1gift: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Postv1giftactivate activates the given gift loyalty card with the specified amount
*/
func (a *Client) Postv1giftactivate(params *Postv1giftactivateParams, opts ...ClientOption) (*Postv1giftactivateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostv1giftactivateParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postv1giftactivate",
		Method:             "POST",
		PathPattern:        "/api/v1/gift/activate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Postv1giftactivateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Postv1giftactivateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postv1giftactivate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Postv1giftbalanceTransfer transfers funds from one card to another

  Notes for the Valutec Gift program:<br> • Only one source (From) card can be used (AlternateCardNumber1).<br> • Source (From) card must be Active, and Destination (To) card must be Inactive. Upon a successful GiftCardBalanceTransfer request, the From card will automatically be Deactivated, and the To card will automatically be Activated.<br> Notes for the Vantiv Core Gift program:<br> • Up to three source (From) cards can be used.<br> • Source (From) cards must be Active, but Destination (To) cards may be Active or Inactive. Upon a successful GiftCardBalanceTransfer request, the From cards will automatically be Deactivated, and the To card will automatically be Activated (if not already previously Active).
*/
func (a *Client) Postv1giftbalanceTransfer(params *Postv1giftbalanceTransferParams, opts ...ClientOption) (*Postv1giftbalanceTransferOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostv1giftbalanceTransferParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postv1giftbalanceTransfer",
		Method:             "POST",
		PathPattern:        "/api/v1/gift/balanceTransfer",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Postv1giftbalanceTransferReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Postv1giftbalanceTransferOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postv1giftbalanceTransfer: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Postv1giftclose closes a valutec gift loyalty card

  This is used to close an active Valutec gift/loyalty card and reduce its balance to $0.  Close may be used to either close a card due to fraudulent use, or, if the customer demands a refund, it may be used to provide a full cash refund of the remaining balance on the card.  Once this close request is complete, the gift/loyalty card number is closed and can no longer be used (i.e. cannot be re-activated).
*/
func (a *Client) Postv1giftclose(params *Postv1giftcloseParams, opts ...ClientOption) (*Postv1giftcloseOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostv1giftcloseParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postv1giftclose",
		Method:             "POST",
		PathPattern:        "/api/v1/gift/close",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Postv1giftcloseReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Postv1giftcloseOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postv1giftclose: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Postv1giftreload reloads the given gift loyalty card with the specified amount
*/
func (a *Client) Postv1giftreload(params *Postv1giftreloadParams, opts ...ClientOption) (*Postv1giftreloadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostv1giftreloadParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postv1giftreload",
		Method:             "POST",
		PathPattern:        "/api/v1/gift/reload",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Postv1giftreloadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Postv1giftreloadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postv1giftreload: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Postv1giftunload removes funds from a valutec gift card

  This is used to remove funds from an existing active Valutec gift card.  The Unload is typically associated with a payment transaction at the POS register when the merchant wishes to decrease the balance of the card due to a cash.  This method could also be used to adjust the balance due to a processing or customer service issue.  This method will result in the card being deactivated, though the card can be re-activated and used again.
*/
func (a *Client) Postv1giftunload(params *Postv1giftunloadParams, opts ...ClientOption) (*Postv1giftunloadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostv1giftunloadParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postv1giftunload",
		Method:             "POST",
		PathPattern:        "/api/v1/gift/unload",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Postv1giftunloadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Postv1giftunloadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postv1giftunload: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
