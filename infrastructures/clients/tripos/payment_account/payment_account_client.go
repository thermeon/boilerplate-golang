// Code generated by go-swagger; DO NOT EDIT.

package payment_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new payment account API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for payment account API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	Deletev1paymentAccountpaymentAccountID(params *Deletev1paymentAccountpaymentAccountIDParams, opts ...ClientOption) (*Deletev1paymentAccountpaymentAccountIDOK, error)

	Postv1paymentAccount(params *Postv1paymentAccountParams, opts ...ClientOption) (*Postv1paymentAccountOK, error)

	Postv1paymentAccountcredit(params *Postv1paymentAccountcreditParams, opts ...ClientOption) (*Postv1paymentAccountcreditOK, error)

	Putv1paymentAccountpaymentAccountID(params *Putv1paymentAccountpaymentAccountIDParams, opts ...ClientOption) (*Putv1paymentAccountpaymentAccountIDOK, error)

	Putv1paymentAccountpaymentAccountIdcredit(params *Putv1paymentAccountpaymentAccountIdcreditParams, opts ...ClientOption) (*Putv1paymentAccountpaymentAccountIdcreditOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  Deletev1paymentAccountpaymentAccountID marks the given payment account for deletion

  This endpoint deletes a payment account created with POST /api/v1/paymentAccount. This endpoint returns an HTTP status code of 200 if the payment account was successfully deleted. Other HTTP status code responses indicate failure. If the payment account is not found, an HTTP status code 404 is returned. After a successful delete, this endpoint will continue to return HTTP status code 200 until the Express processing platform purges the payment account from the system. Payment account purge typically happens within 48 hours. After 48 hours, this endpoint will return a 404 Not Found HTTP status code for the deleted payment account.
*/
func (a *Client) Deletev1paymentAccountpaymentAccountID(params *Deletev1paymentAccountpaymentAccountIDParams, opts ...ClientOption) (*Deletev1paymentAccountpaymentAccountIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeletev1paymentAccountpaymentAccountIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deletev1paymentAccountpaymentAccountId",
		Method:             "DELETE",
		PathPattern:        "/api/v1/paymentAccount/{paymentAccountId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Deletev1paymentAccountpaymentAccountIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Deletev1paymentAccountpaymentAccountIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deletev1paymentAccountpaymentAccountId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Postv1paymentAccount creates a card account token based on the given data
*/
func (a *Client) Postv1paymentAccount(params *Postv1paymentAccountParams, opts ...ClientOption) (*Postv1paymentAccountOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostv1paymentAccountParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postv1paymentAccount",
		Method:             "POST",
		PathPattern:        "/api/v1/paymentAccount",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Postv1paymentAccountReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Postv1paymentAccountOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postv1paymentAccount: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Postv1paymentAccountcredit deprecateds use v1 payment account instead
*/
func (a *Client) Postv1paymentAccountcredit(params *Postv1paymentAccountcreditParams, opts ...ClientOption) (*Postv1paymentAccountcreditOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostv1paymentAccountcreditParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "postv1paymentAccountcredit",
		Method:             "POST",
		PathPattern:        "/api/v1/paymentAccount/credit",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Postv1paymentAccountcreditReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Postv1paymentAccountcreditOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for postv1paymentAccountcredit: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Putv1paymentAccountpaymentAccountID updates a payment account based on the given data
*/
func (a *Client) Putv1paymentAccountpaymentAccountID(params *Putv1paymentAccountpaymentAccountIDParams, opts ...ClientOption) (*Putv1paymentAccountpaymentAccountIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutv1paymentAccountpaymentAccountIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "putv1paymentAccountpaymentAccountId",
		Method:             "PUT",
		PathPattern:        "/api/v1/paymentAccount/{paymentAccountId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Putv1paymentAccountpaymentAccountIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Putv1paymentAccountpaymentAccountIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for putv1paymentAccountpaymentAccountId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Putv1paymentAccountpaymentAccountIdcredit deprecateds use v1 payment account payment account Id instead
*/
func (a *Client) Putv1paymentAccountpaymentAccountIdcredit(params *Putv1paymentAccountpaymentAccountIdcreditParams, opts ...ClientOption) (*Putv1paymentAccountpaymentAccountIdcreditOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutv1paymentAccountpaymentAccountIdcreditParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "putv1paymentAccountpaymentAccountIdcredit",
		Method:             "PUT",
		PathPattern:        "/api/v1/paymentAccount/{paymentAccountId}/credit",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Putv1paymentAccountpaymentAccountIdcreditReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Putv1paymentAccountpaymentAccountIdcreditOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for putv1paymentAccountpaymentAccountIdcredit: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
