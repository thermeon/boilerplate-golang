// Code generated by go-swagger; DO NOT EDIT.

package tripos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/authorization"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/balance"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/barcode"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/bin_query"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/card"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/credit"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/display"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/ebt_voucher"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/force"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/gift"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/idle"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/input"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/payment_account"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/pin_pad_selection_prompt"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/pinpad"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/reboot"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/receipt"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/refund"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/return_operations"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/reversal"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/sale"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/scrolling_display"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/selection"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/signature"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/status"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/token"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/v1_links"
	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/void"
)

// Default triposcert vantiv com HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "triposcert.vantiv.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new triposcert vantiv com HTTP client.
func NewHTTPClient(formats strfmt.Registry) *TriposcertVantivCom {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new triposcert vantiv com HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *TriposcertVantivCom {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new triposcert vantiv com client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *TriposcertVantivCom {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(TriposcertVantivCom)
	cli.Transport = transport
	cli.Authorization = authorization.New(transport, formats)
	cli.Balance = balance.New(transport, formats)
	cli.Barcode = barcode.New(transport, formats)
	cli.BinQuery = bin_query.New(transport, formats)
	cli.Card = card.New(transport, formats)
	cli.Credit = credit.New(transport, formats)
	cli.Display = display.New(transport, formats)
	cli.EbtVoucher = ebt_voucher.New(transport, formats)
	cli.Force = force.New(transport, formats)
	cli.Gift = gift.New(transport, formats)
	cli.Idle = idle.New(transport, formats)
	cli.Input = input.New(transport, formats)
	cli.PaymentAccount = payment_account.New(transport, formats)
	cli.PinPadSelectionPrompt = pin_pad_selection_prompt.New(transport, formats)
	cli.Pinpad = pinpad.New(transport, formats)
	cli.Reboot = reboot.New(transport, formats)
	cli.Receipt = receipt.New(transport, formats)
	cli.Refund = refund.New(transport, formats)
	cli.ReturnOperations = return_operations.New(transport, formats)
	cli.Reversal = reversal.New(transport, formats)
	cli.Sale = sale.New(transport, formats)
	cli.ScrollingDisplay = scrolling_display.New(transport, formats)
	cli.Selection = selection.New(transport, formats)
	cli.Signature = signature.New(transport, formats)
	cli.Status = status.New(transport, formats)
	cli.Token = token.New(transport, formats)
	cli.V1Links = v1_links.New(transport, formats)
	cli.Void = void.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// TriposcertVantivCom is a client for triposcert vantiv com
type TriposcertVantivCom struct {
	Authorization authorization.ClientService

	Balance balance.ClientService

	Barcode barcode.ClientService

	BinQuery bin_query.ClientService

	Card card.ClientService

	Credit credit.ClientService

	Display display.ClientService

	EbtVoucher ebt_voucher.ClientService

	Force force.ClientService

	Gift gift.ClientService

	Idle idle.ClientService

	Input input.ClientService

	PaymentAccount payment_account.ClientService

	PinPadSelectionPrompt pin_pad_selection_prompt.ClientService

	Pinpad pinpad.ClientService

	Reboot reboot.ClientService

	Receipt receipt.ClientService

	Refund refund.ClientService

	ReturnOperations return_operations.ClientService

	Reversal reversal.ClientService

	Sale sale.ClientService

	ScrollingDisplay scrolling_display.ClientService

	Selection selection.ClientService

	Signature signature.ClientService

	Status status.ClientService

	Token token.ClientService

	V1Links v1_links.ClientService

	Void void.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *TriposcertVantivCom) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Authorization.SetTransport(transport)
	c.Balance.SetTransport(transport)
	c.Barcode.SetTransport(transport)
	c.BinQuery.SetTransport(transport)
	c.Card.SetTransport(transport)
	c.Credit.SetTransport(transport)
	c.Display.SetTransport(transport)
	c.EbtVoucher.SetTransport(transport)
	c.Force.SetTransport(transport)
	c.Gift.SetTransport(transport)
	c.Idle.SetTransport(transport)
	c.Input.SetTransport(transport)
	c.PaymentAccount.SetTransport(transport)
	c.PinPadSelectionPrompt.SetTransport(transport)
	c.Pinpad.SetTransport(transport)
	c.Reboot.SetTransport(transport)
	c.Receipt.SetTransport(transport)
	c.Refund.SetTransport(transport)
	c.ReturnOperations.SetTransport(transport)
	c.Reversal.SetTransport(transport)
	c.Sale.SetTransport(transport)
	c.ScrollingDisplay.SetTransport(transport)
	c.Selection.SetTransport(transport)
	c.Signature.SetTransport(transport)
	c.Status.SetTransport(transport)
	c.Token.SetTransport(transport)
	c.V1Links.SetTransport(transport)
	c.Void.SetTransport(transport)
}
