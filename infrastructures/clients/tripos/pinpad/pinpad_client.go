// Code generated by go-swagger; DO NOT EDIT.

package pinpad

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new pinpad API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for pinpad API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	Getv1pinpadcard(params *Getv1pinpadcardParams, opts ...ClientOption) (*Getv1pinpadcardOK, error)

	Getv1pinpadcardfinancial(params *Getv1pinpadcardfinancialParams, opts ...ClientOption) (*Getv1pinpadcardfinancialOK, error)

	Getv1pinpadcardfinanciallaneID(params *Getv1pinpadcardfinanciallaneIDParams, opts ...ClientOption) (*Getv1pinpadcardfinanciallaneIDOK, error)

	Getv1pinpadcardlaneID(params *Getv1pinpadcardlaneIDParams, opts ...ClientOption) (*Getv1pinpadcardlaneIDOK, error)

	Getv1pinpadcardnonfinancial(params *Getv1pinpadcardnonfinancialParams, opts ...ClientOption) (*Getv1pinpadcardnonfinancialOK, error)

	Getv1pinpadcardnonfinanciallaneID(params *Getv1pinpadcardnonfinanciallaneIDParams, opts ...ClientOption) (*Getv1pinpadcardnonfinanciallaneIDOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  Getv1pinpadcard deprecateds use v1 card instead
*/
func (a *Client) Getv1pinpadcard(params *Getv1pinpadcardParams, opts ...ClientOption) (*Getv1pinpadcardOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetv1pinpadcardParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getv1pinpadcard",
		Method:             "GET",
		PathPattern:        "/api/v1/pinpad/card",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Getv1pinpadcardReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Getv1pinpadcardOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getv1pinpadcard: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Getv1pinpadcardfinancial deprecateds use v1 card financial instead
*/
func (a *Client) Getv1pinpadcardfinancial(params *Getv1pinpadcardfinancialParams, opts ...ClientOption) (*Getv1pinpadcardfinancialOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetv1pinpadcardfinancialParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getv1pinpadcardfinancial",
		Method:             "GET",
		PathPattern:        "/api/v1/pinpad/card/financial",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Getv1pinpadcardfinancialReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Getv1pinpadcardfinancialOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getv1pinpadcardfinancial: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Getv1pinpadcardfinanciallaneID deprecateds use v1 card financial lane Id instead
*/
func (a *Client) Getv1pinpadcardfinanciallaneID(params *Getv1pinpadcardfinanciallaneIDParams, opts ...ClientOption) (*Getv1pinpadcardfinanciallaneIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetv1pinpadcardfinanciallaneIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getv1pinpadcardfinanciallaneId",
		Method:             "GET",
		PathPattern:        "/api/v1/pinpad/card/financial/{laneId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Getv1pinpadcardfinanciallaneIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Getv1pinpadcardfinanciallaneIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getv1pinpadcardfinanciallaneId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Getv1pinpadcardlaneID deprecateds use v1 card lane Id instead
*/
func (a *Client) Getv1pinpadcardlaneID(params *Getv1pinpadcardlaneIDParams, opts ...ClientOption) (*Getv1pinpadcardlaneIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetv1pinpadcardlaneIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getv1pinpadcardlaneId",
		Method:             "GET",
		PathPattern:        "/api/v1/pinpad/card/{laneId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Getv1pinpadcardlaneIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Getv1pinpadcardlaneIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getv1pinpadcardlaneId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Getv1pinpadcardnonfinancial deprecateds use v1 card nonfinancial instead
*/
func (a *Client) Getv1pinpadcardnonfinancial(params *Getv1pinpadcardnonfinancialParams, opts ...ClientOption) (*Getv1pinpadcardnonfinancialOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetv1pinpadcardnonfinancialParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getv1pinpadcardnonfinancial",
		Method:             "GET",
		PathPattern:        "/api/v1/pinpad/card/nonfinancial",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Getv1pinpadcardnonfinancialReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Getv1pinpadcardnonfinancialOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getv1pinpadcardnonfinancial: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  Getv1pinpadcardnonfinanciallaneID deprecateds use v1 card nonfinancial lane Id instead
*/
func (a *Client) Getv1pinpadcardnonfinanciallaneID(params *Getv1pinpadcardnonfinanciallaneIDParams, opts ...ClientOption) (*Getv1pinpadcardnonfinanciallaneIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetv1pinpadcardnonfinanciallaneIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getv1pinpadcardnonfinanciallaneId",
		Method:             "GET",
		PathPattern:        "/api/v1/pinpad/card/nonfinancial/{laneId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &Getv1pinpadcardnonfinanciallaneIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*Getv1pinpadcardnonfinanciallaneIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getv1pinpadcardnonfinanciallaneId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
