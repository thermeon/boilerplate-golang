// Code generated by go-swagger; DO NOT EDIT.

package idle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/thermeon/boilerplate-golang/infrastructures/clients/tripos/models"
)

// Postv1idleReader is a Reader for the Postv1idle structure.
type Postv1idleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *Postv1idleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostv1idleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostv1idleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostv1idleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostv1idleOK creates a Postv1idleOK with default headers values
func NewPostv1idleOK() *Postv1idleOK {
	return &Postv1idleOK{}
}

/* Postv1idleOK describes a response with status code 200, with default header values.

Success
*/
type Postv1idleOK struct {
	Payload *models.IdleResponse
}

func (o *Postv1idleOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/idle][%d] postv1idleOK  %+v", 200, o.Payload)
}
func (o *Postv1idleOK) GetPayload() *models.IdleResponse {
	return o.Payload
}

func (o *Postv1idleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IdleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostv1idleBadRequest creates a Postv1idleBadRequest with default headers values
func NewPostv1idleBadRequest() *Postv1idleBadRequest {
	return &Postv1idleBadRequest{}
}

/* Postv1idleBadRequest describes a response with status code 400, with default header values.

Returned if the laneId is not valid or the lane is already in use
*/
type Postv1idleBadRequest struct {
}

func (o *Postv1idleBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/idle][%d] postv1idleBadRequest ", 400)
}

func (o *Postv1idleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostv1idleInternalServerError creates a Postv1idleInternalServerError with default headers values
func NewPostv1idleInternalServerError() *Postv1idleInternalServerError {
	return &Postv1idleInternalServerError{}
}

/* Postv1idleInternalServerError describes a response with status code 500, with default header values.

Returned if the PIN pad is disconnected
*/
type Postv1idleInternalServerError struct {
}

func (o *Postv1idleInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/idle][%d] postv1idleInternalServerError ", 500)
}

func (o *Postv1idleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
